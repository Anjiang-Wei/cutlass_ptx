
/*
  Generated by gemm_operation.py - Do not edit.
*/

///////////////////////////////////////////////////////////////////////////////////////////////////

#include "cutlass/cutlass.h"
#include "cutlass/library/library.h"
#include "cutlass/library/manifest.h"
#include "library_internal.h"
#include "gemm_operation.h"
#include "gemm_operation_3x.hpp"
#include "grouped_gemm_operation_3x.hpp"
#include "sparse_gemm_operation_3x.hpp"
#include "block_scaled_gemm_operation_3x.hpp"
#include "blockwise_gemm_operation_3x.hpp"
#include "cutlass/arch/wmma.h"
#include "cutlass/numeric_types.h"

///////////////////////////////////////////////////////////////////////////////////////////////////


  // Gemm operator cutlass_tensorop_s1688gemm_planar_complex_f16_128x64_32x2_ct_align2
  using Operation_cutlass_tensorop_s1688gemm_planar_complex_f16_128x64_32x2_ct_align2 = typename cutlass::gemm::kernel::DefaultGemmPlanarComplexUniversal<
    cutlass::half_t, cutlass::layout::ColumnMajor, cutlass::ComplexTransform::kNone, 2,
    cutlass::half_t, cutlass::layout::RowMajor, cutlass::ComplexTransform::kConjugate, 2,
    float, cutlass::layout::RowMajor,
    float,
    cutlass::arch::OpClassTensorOp,
    cutlass::arch::Sm75,
    cutlass::gemm::GemmShape<128, 64, 32>,
    cutlass::gemm::GemmShape<32, 32, 32>,
    cutlass::gemm::GemmShape<16, 8, 8>,
    cutlass::epilogue::thread::LinearCombinationPlanarComplex<
      float,
      2,
      float,
      float
    >,
    cutlass::gemm::threadblock::GemmIdentityThreadblockSwizzle<>,
    2,
    cutlass::arch::OpMultiplyAdd
  >::GemmKernel;

  struct cutlass_tensorop_s1688gemm_planar_complex_f16_128x64_32x2_ct_align2 :
    public Operation_cutlass_tensorop_s1688gemm_planar_complex_f16_128x64_32x2_ct_align2 { };


///////////////////////////////////////////////////////////////////////////////////////////////////

namespace cutlass {
namespace library {

///////////////////////////////////////////////////////////////////////////////////////////////////

void initialize_cutlass_tensorop_s1688gemm_planar_complex_f16_128x64_32x2_ct_align2(Manifest &manifest) {



  manifest.append(new GemmPlanarComplexOperation<
    cutlass::gemm::device::GemmUniversalAdapter<cutlass_tensorop_s1688gemm_planar_complex_f16_128x64_32x2_ct_align2>
  >("cutlass_tensorop_s1688gemm_planar_complex_f16_128x64_32x2_ct_align2"));



}

///////////////////////////////////////////////////////////////////////////////////////////////////

} // namespace library
} // namespace cutlass

///////////////////////////////////////////////////////////////////////////////////////////////////

