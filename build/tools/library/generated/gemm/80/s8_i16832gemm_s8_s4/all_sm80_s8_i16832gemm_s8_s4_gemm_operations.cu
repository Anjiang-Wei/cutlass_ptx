
/*
 Generated by manifest.py - Do not edit.
*/

#include "cutlass/cutlass.h"
#include "cutlass/library/library.h"
#include "cutlass/library/manifest.h"

namespace cutlass {
namespace library {

///////////////////////////////////////////////////////////////////////////////////////////////////

void initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_256x128_64x3_tn_align32(Manifest &manifest);
void initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_128x256_64x3_tn_align32(Manifest &manifest);
void initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_256x64_64x4_tn_align32(Manifest &manifest);
void initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_64x256_64x4_tn_align32(Manifest &manifest);
void initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_256x32_64x4_tn_align32(Manifest &manifest);
void initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_128x128_64x5_tn_align32(Manifest &manifest);
void initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_64x128_64x6_tn_align32(Manifest &manifest);
void initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_128x32_64x6_tn_align32(Manifest &manifest);
void initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_256x128_128x3_tn_align32(Manifest &manifest);
void initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_128x256_128x3_tn_align32(Manifest &manifest);
void initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_256x64_128x4_tn_align32(Manifest &manifest);
void initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_64x256_128x4_tn_align32(Manifest &manifest);
void initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_256x32_128x4_tn_align32(Manifest &manifest);
void initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_32x256_128x4_tn_align32(Manifest &manifest);
void initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_128x128_128x4_tn_align32(Manifest &manifest);
void initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_64x128_128x3_tn_align32(Manifest &manifest);
void initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_128x32_128x4_tn_align32(Manifest &manifest);


//
// Entry point to construct operations
//
void initialize_all_sm80_s8_i16832gemm_s8_s4_gemm_operations(Manifest &manifest) {
  initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_256x128_64x3_tn_align32(manifest);
  initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_128x256_64x3_tn_align32(manifest);
  initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_256x64_64x4_tn_align32(manifest);
  initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_64x256_64x4_tn_align32(manifest);
  initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_256x32_64x4_tn_align32(manifest);
  initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_128x128_64x5_tn_align32(manifest);
  initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_64x128_64x6_tn_align32(manifest);
  initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_128x32_64x6_tn_align32(manifest);
  initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_256x128_128x3_tn_align32(manifest);
  initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_128x256_128x3_tn_align32(manifest);
  initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_256x64_128x4_tn_align32(manifest);
  initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_64x256_128x4_tn_align32(manifest);
  initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_256x32_128x4_tn_align32(manifest);
  initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_32x256_128x4_tn_align32(manifest);
  initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_128x128_128x4_tn_align32(manifest);
  initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_64x128_128x3_tn_align32(manifest);
  initialize_cutlass_tensorop_s8_i16832gemm_s8_s4_128x32_128x4_tn_align32(manifest);
}

///////////////////////////////////////////////////////////////////////////////////////////////////

} // namespace library
} // namespace cutlass

